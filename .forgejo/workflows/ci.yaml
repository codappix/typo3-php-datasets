name: 'CI'

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  check-composer:
    runs-on: 'self-hosted'
    steps:
      - uses: 'actions/checkout@v5'

      - name: 'Install PHP'
        uses: 'actions/setup-php@v2'
        with:
          php-version: '8.4'

      - name: 'Validate composer.json'
        run: 'composer validate'

  php-linting:
    runs-on: 'self-hosted'
    strategy:
      matrix:
        php-version:
          - '8.2'
          - '8.3'
          - '8.4'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v5'

      - name: 'Install PHP'
        uses: 'actions/setup-php@v2'
        with:
          php-version: '${{ matrix.php-version }}'

      - name: 'PHP lint'
        run: "find .*.php Classes Tests -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l"

  xml-linting:
    runs-on: 'self-hosted'
    needs:
      - 'check-composer'
    steps:
      - uses: 'actions/checkout@v5'

      - name: 'Install PHP'
        uses: 'actions/setup-php@v2'
        with:
          php-version: '8.4'

      - name: 'Install xmllint'
        run: 'sudo apt update && sudo apt install libxml2-utils'

      - name: 'Get composer cache directory'
        id: 'composer-cache'
        run: 'echo "dir=$(composer config cache-files-dir)" >> $FORGEJO_OUTPUT'

      - name: 'Cache dependencies'
        uses: 'actions/cache@v4'
        with:
          path: '${{ steps.composer-cache.outputs.dir }}'
          key: 'composer'
          restore-keys: 'composer'

      - name: 'Install dependencies'
        run: 'composer update --prefer-dist --no-progress'

      - name: 'PHPUnit configuration file'
        run: 'xmllint --schema vendor/phpunit/phpunit/phpunit.xsd --noout phpunit.xml.dist'

  coding-guideline:
    runs-on: 'self-hosted'
    steps:
      - uses: 'actions/checkout@v5'

      - name: 'Install PHP'
        uses: 'actions/setup-php@v2'
        with:
          php-version: '8.3'

      - name: 'Get composer cache directory'
        id: 'composer-cache'
        run: 'echo "dir=$(composer config cache-files-dir)" >> $FORGEJO_OUTPUT'

      - name: 'Cache dependencies'
        uses: 'actions/cache@v4'
        with:
          path: '${{ steps.composer-cache.outputs.dir }}'
          key: 'composer'
          restore-keys: 'composer'

      - name: 'Install dependencies'
        run: 'composer update --prefer-dist --no-progress'

      - name: 'Coding Guideline'
        run: './vendor/bin/php-cs-fixer fix --dry-run --diff'

  tests:
    runs-on: 'self-hosted'
    needs:
      - 'xml-linting'
    strategy:
      matrix:
        include:
          - php-version: '8.2'
            typo3-version: '^13.0'
          - php-version: '8.3'
            typo3-version: '^13.0'
          - php-version: '8.4'
            typo3-version: '^13.0'
    steps:
      - uses: 'actions/checkout@v5'

      - name: 'Install PHP'
        uses: 'actions/setup-php@v2'
        with:
          php-version: '${{ matrix.php-version }}'
          extensions: 'sqlite3'

      - name: 'Get composer cache directory'
        id: 'composer-cache'
        run: 'echo "dir=$(composer config cache-files-dir)" >> $FORGEJO_OUTPUT'

      - name: 'Cache dependencies'
        uses: 'actions/cache@v4'
        with:
          path: '${{ steps.composer-cache.outputs.dir }}'
          key: 'composer'
          restore-keys: 'composer'

      - name: 'Install dependencies with expected TYPO3 version'
        run: 'composer require --prefer-dist --no-progress "typo3/cms-core:${{ matrix.typo3-version }}"'

      - name: 'PHPUnit Tests'
        run: './vendor/bin/phpunit --testdox'

  code-quality:
    runs-on: 'self-hosted'
    strategy:
      matrix:
        include:
          - php-version: '8.2'
            typo3-version: '^13.4'
          - php-version: '8.3'
            typo3-version: '^13.4'
          - php-version: '8.4'
            typo3-version: '^13.4'
    steps:
      - uses: 'actions/checkout@v5'

      - name: 'Install PHP'
        uses: 'actions/setup-php@v2'
        with:
          php-version: '${{ matrix.php-version }}'

      - name: 'Get composer cache directory'
        id: 'composer-cache'
        run: 'echo "dir=$(composer config cache-files-dir)" >> $FORGEJO_OUTPUT'

      - name: 'Cache dependencies'
        uses: 'actions/cache@v4'
        with:
          path: '${{ steps.composer-cache.outputs.dir }}'
          key: 'composer'
          restore-keys: 'composer'

      - name: 'Install dependencies with expected TYPO3 version'
        run: 'composer require --prefer-dist --no-progress "typo3/cms-backend:${{ matrix.typo3-version }}" "typo3/cms-core:${{ matrix.typo3-version }}" "typo3/cms-dashboard:${{ matrix.typo3-version }}"'

      - name: 'Code Quality (by PHPStan)'
        run: './vendor/bin/phpstan analyse'
